version: '3.8'

services:
  postgis:
    build:
      context: .
      dockerfile: dockerfile.postgis
    healthcheck:
     test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -h localhost"]
     interval: 10s
     timeout: 5s
     retries: 5
    container_name: postgis_dev
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      DATABASE_URL: ${DATABASE_URL}
    volumes:
      - postgis_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  martin:
    image: ghcr.io/maplibre/martin:latest
    container_name: martin_dev
    depends_on:
      postgis:
        condition: service_healthy
    ports:
      - "3000:3000"
    volumes:
      - ./config:/config
    command: ["--config", "/config/config.yaml"]
    environment:
     DATABASE_URL: ${DATABASE_URL}

  nodejs_backend:
    build:
      context: ./backend  # Path to your Node.js application
      dockerfile: dockerfile.nodejs 
    container_name: nodejs_backend_dev
    environment:
      # Environment variables for your Node.js app
      NODE_ENV: development
    volumes:
      - ./backend:/app  # Mount your backend code into the container
    ports:
      - "3002:8080" 
    depends_on:
      - postgis

  nginx:
    image: nginx:alpine
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
    ports:
      - "3001:80" 

volumes:
  postgis_data: